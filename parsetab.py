
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDECLOSE CLOSE_P DIVIDE DRAW ELSE EQUALEQUAL EQUALS FLOAT FOR IF INPUT INT LESS MINUS MORE MULTIPLY NAME OPEN OPEN_P PLUS PRINT Q_MARK SEMICOLON STRING\n    run : expression\n         | var_assign\n         | condition\n         | empty\n\n    \n    var_assign : NAME EQUALS expression SEMICOLON var_assign\n               | NAME EQUALS expression SEMICOLON expression\n               | NAME EQUALS expression expression\n    \n    var_assign : NAME EQUALS expression SEMICOLON\n    var_assign : NAME EQUALS INPUT SEMICOLON\n    \n    expression : expression MULTIPLY expression SEMICOLON\n               | expression DIVIDE expression SEMICOLON\n               | expression PLUS expression SEMICOLON\n               | expression MINUS expression SEMICOLON\n    \n    expression : INT\n               | FLOAT\n               | STRING\n    \n    expression : NAME\n    \n    expression : DRAW OPEN_P expression expression expression expression CLOSE_P SEMICOLON\n    \n    expression : FOR OPEN_P INT CLOSE_P OPEN var_assign CLOSE expression\n               | FOR OPEN_P INT CLOSE_P OPEN expression CLOSE expression\n               | FOR OPEN_P INT CLOSE_P OPEN expression CLOSE var_assign\n               | FOR OPEN_P INT CLOSE_P OPEN var_assign CLOSE var_assign\n    \n    expression : FOR OPEN_P INT CLOSE_P OPEN var_assign CLOSE\n               | FOR OPEN_P INT CLOSE_P OPEN expression CLOSE\n    \n    expression : PRINT expression SEMICOLON expression\n               | PRINT expression SEMICOLON var_assign\n    \n    expression : PRINT expression SEMICOLON\n    \n    condition : INT LESS INT\n              | INT MORE INT\n              | INT EQUALEQUAL INT\n    \n    expression : IF OPEN_P condition CLOSE_P OPEN expression CLOSE\n               | IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE\n    \n    expression : IF OPEN_P condition CLOSE_P OPEN expression CLOSE expression\n               | IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE expression\n               | IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE var_assign\n               | IF OPEN_P condition CLOSE_P OPEN expression CLOSE var_assign\n    \n    expression : IF OPEN_P condition CLOSE_P OPEN expression CLOSE ELSE OPEN expression CLOSE\n               | IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE ELSE OPEN expression CLOSE\n               | IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE ELSE OPEN var_assign CLOSE\n               | IF OPEN_P condition CLOSE_P OPEN expression CLOSE ELSE OPEN var_assign CLOSE\n    \n    expression : IF OPEN_P condition CLOSE_P OPEN expression CLOSE ELSE OPEN expression CLOSE expression\n               | IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE ELSE OPEN expression CLOSE expression\n               | IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE ELSE OPEN var_assign CLOSE expression\n               | IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE ELSE OPEN var_assign CLOSE var_assign\n               | IF OPEN_P condition CLOSE_P OPEN expression CLOSE ELSE OPEN var_assign CLOSE expression\n               | IF OPEN_P condition CLOSE_P OPEN expression CLOSE ELSE OPEN expression CLOSE var_assign\n    \n    empty :\n    '
    
_lr_action_items = {'INT':([0,7,8,9,12,14,15,16,17,18,19,20,21,22,23,25,26,27,35,37,39,42,43,44,45,46,47,48,49,51,52,54,55,56,57,58,59,66,67,68,69,70,71,72,73,74,75,76,78,79,81,82,87,88,89,90,91,92,93,94,95,96,],[6,-15,-16,-17,25,25,25,25,25,32,33,34,25,25,38,-14,-17,41,25,25,25,-10,-11,-12,-13,-7,25,-9,25,-25,-26,-17,-6,-5,25,25,25,25,25,25,25,-18,-22,-19,-20,-21,-33,-36,-35,-34,25,25,25,25,25,25,-41,-46,-45,-44,-43,-42,]),'FLOAT':([0,7,8,9,12,14,15,16,17,21,22,25,26,35,37,39,42,43,44,45,46,47,48,49,51,52,54,55,56,57,58,59,66,67,68,69,70,71,72,73,74,75,76,78,79,81,82,87,88,89,90,91,92,93,94,95,96,],[7,-15,-16,-17,7,7,7,7,7,7,7,-14,-17,7,7,7,-10,-11,-12,-13,-7,7,-9,7,-25,-26,-17,-6,-5,7,7,7,7,7,7,7,-18,-22,-19,-20,-21,-33,-36,-35,-34,7,7,7,7,7,7,-41,-46,-45,-44,-43,-42,]),'STRING':([0,7,8,9,12,14,15,16,17,21,22,25,26,35,37,39,42,43,44,45,46,47,48,49,51,52,54,55,56,57,58,59,66,67,68,69,70,71,72,73,74,75,76,78,79,81,82,87,88,89,90,91,92,93,94,95,96,],[8,-15,-16,-17,8,8,8,8,8,8,8,-14,-17,8,8,8,-10,-11,-12,-13,-7,8,-9,8,-25,-26,-17,-6,-5,8,8,8,8,8,8,8,-18,-22,-19,-20,-21,-33,-36,-35,-34,8,8,8,8,8,8,-41,-46,-45,-44,-43,-42,]),'NAME':([0,7,8,9,12,14,15,16,17,21,22,25,26,35,37,39,42,43,44,45,46,47,48,49,51,52,54,55,56,57,58,59,66,67,68,69,70,71,72,73,74,75,76,78,79,81,82,87,88,89,90,91,92,93,94,95,96,],[9,-15,-16,-17,26,26,26,26,26,26,26,-14,-17,26,26,9,-10,-11,-12,-13,-7,54,-9,26,-25,-26,-17,-6,-5,26,54,9,9,9,9,9,-18,-22,-19,-20,-21,-33,-36,-35,-34,9,9,9,26,9,26,-41,-46,-45,-44,-43,-42,]),'DRAW':([0,7,8,9,12,14,15,16,17,21,22,25,26,35,37,39,42,43,44,45,46,47,48,49,51,52,54,55,56,57,58,59,66,67,68,69,70,71,72,73,74,75,76,78,79,81,82,87,88,89,90,91,92,93,94,95,96,],[10,-15,-16,-17,10,10,10,10,10,10,10,-14,-17,10,10,10,-10,-11,-12,-13,-7,10,-9,10,-25,-26,-17,-6,-5,10,10,10,10,10,10,10,-18,-22,-19,-20,-21,-33,-36,-35,-34,10,10,10,10,10,10,-41,-46,-45,-44,-43,-42,]),'FOR':([0,7,8,9,12,14,15,16,17,21,22,25,26,35,37,39,42,43,44,45,46,47,48,49,51,52,54,55,56,57,58,59,66,67,68,69,70,71,72,73,74,75,76,78,79,81,82,87,88,89,90,91,92,93,94,95,96,],[11,-15,-16,-17,11,11,11,11,11,11,11,-14,-17,11,11,11,-10,-11,-12,-13,-7,11,-9,11,-25,-26,-17,-6,-5,11,11,11,11,11,11,11,-18,-22,-19,-20,-21,-33,-36,-35,-34,11,11,11,11,11,11,-41,-46,-45,-44,-43,-42,]),'PRINT':([0,7,8,9,12,14,15,16,17,21,22,25,26,35,37,39,42,43,44,45,46,47,48,49,51,52,54,55,56,57,58,59,66,67,68,69,70,71,72,73,74,75,76,78,79,81,82,87,88,89,90,91,92,93,94,95,96,],[12,-15,-16,-17,12,12,12,12,12,12,12,-14,-17,12,12,12,-10,-11,-12,-13,-7,12,-9,12,-25,-26,-17,-6,-5,12,12,12,12,12,12,12,-18,-22,-19,-20,-21,-33,-36,-35,-34,12,12,12,12,12,12,-41,-46,-45,-44,-43,-42,]),'IF':([0,7,8,9,12,14,15,16,17,21,22,25,26,35,37,39,42,43,44,45,46,47,48,49,51,52,54,55,56,57,58,59,66,67,68,69,70,71,72,73,74,75,76,78,79,81,82,87,88,89,90,91,92,93,94,95,96,],[13,-15,-16,-17,13,13,13,13,13,13,13,-14,-17,13,13,13,-10,-11,-12,-13,-7,13,-9,13,-25,-26,-17,-6,-5,13,13,13,13,13,13,13,-18,-22,-19,-20,-21,-33,-36,-35,-34,13,13,13,13,13,13,-41,-46,-45,-44,-43,-42,]),'$end':([0,1,2,3,4,5,6,7,8,9,25,26,32,33,34,39,42,43,44,45,46,47,48,51,52,54,55,56,66,67,68,69,70,71,72,73,74,75,76,78,79,87,88,89,90,91,92,93,94,95,96,],[-47,0,-1,-2,-3,-4,-14,-15,-16,-17,-14,-17,-28,-29,-30,-27,-10,-11,-12,-13,-7,-8,-9,-25,-26,-17,-6,-5,-23,-24,-31,-32,-18,-22,-19,-20,-21,-33,-36,-35,-34,-37,-40,-39,-38,-41,-46,-45,-44,-43,-42,]),'MULTIPLY':([2,6,7,8,9,24,25,26,28,29,30,31,35,37,39,42,43,44,45,46,47,48,49,51,52,54,55,56,57,60,62,63,66,67,68,69,70,71,72,73,74,75,76,78,79,83,86,87,88,89,90,91,92,93,94,95,96,],[14,-14,-15,-16,-17,14,-14,-17,14,14,14,14,14,14,-27,-10,-11,-12,-13,14,-8,-9,14,14,-26,-17,14,-5,14,14,14,14,-23,-24,-31,-32,-18,-22,14,14,-21,14,-36,-35,14,14,14,-37,-40,-39,-38,14,-46,14,-44,14,14,]),'DIVIDE':([2,6,7,8,9,24,25,26,28,29,30,31,35,37,39,42,43,44,45,46,47,48,49,51,52,54,55,56,57,60,62,63,66,67,68,69,70,71,72,73,74,75,76,78,79,83,86,87,88,89,90,91,92,93,94,95,96,],[15,-14,-15,-16,-17,15,-14,-17,15,15,15,15,15,15,-27,-10,-11,-12,-13,15,-8,-9,15,15,-26,-17,15,-5,15,15,15,15,-23,-24,-31,-32,-18,-22,15,15,-21,15,-36,-35,15,15,15,-37,-40,-39,-38,15,-46,15,-44,15,15,]),'PLUS':([2,6,7,8,9,24,25,26,28,29,30,31,35,37,39,42,43,44,45,46,47,48,49,51,52,54,55,56,57,60,62,63,66,67,68,69,70,71,72,73,74,75,76,78,79,83,86,87,88,89,90,91,92,93,94,95,96,],[16,-14,-15,-16,-17,16,-14,-17,16,16,16,16,16,16,-27,-10,-11,-12,-13,16,-8,-9,16,16,-26,-17,16,-5,16,16,16,16,-23,-24,-31,-32,-18,-22,16,16,-21,16,-36,-35,16,16,16,-37,-40,-39,-38,16,-46,16,-44,16,16,]),'MINUS':([2,6,7,8,9,24,25,26,28,29,30,31,35,37,39,42,43,44,45,46,47,48,49,51,52,54,55,56,57,60,62,63,66,67,68,69,70,71,72,73,74,75,76,78,79,83,86,87,88,89,90,91,92,93,94,95,96,],[17,-14,-15,-16,-17,17,-14,-17,17,17,17,17,17,17,-27,-10,-11,-12,-13,17,-8,-9,17,17,-26,-17,17,-5,17,17,17,17,-23,-24,-31,-32,-18,-22,17,17,-21,17,-36,-35,17,17,17,-37,-40,-39,-38,17,-46,17,-44,17,17,]),'LESS':([6,41,],[18,18,]),'MORE':([6,41,],[19,19,]),'EQUALEQUAL':([6,41,],[20,20,]),'SEMICOLON':([7,8,9,24,25,26,28,29,30,31,35,36,39,42,43,44,45,46,47,48,51,52,54,55,56,65,66,67,68,69,70,71,72,73,74,75,76,78,79,87,88,89,90,91,92,93,94,95,96,],[-15,-16,-17,39,-14,-17,42,43,44,45,47,48,-27,-10,-11,-12,-13,-7,-8,-9,-25,-26,-17,-6,-5,70,-23,-24,-31,-32,-18,-22,-19,-20,-21,-33,-36,-35,-34,-37,-40,-39,-38,-41,-46,-45,-44,-43,-42,]),'CLOSE':([7,8,9,25,26,39,42,43,44,45,46,47,48,51,52,54,55,56,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,],[-15,-16,-17,-14,-17,-27,-10,-11,-12,-13,-7,-8,-9,-25,-26,-17,-6,-5,66,67,68,69,-23,-24,-31,-32,-18,-22,-19,-20,-21,-33,-36,-35,-34,87,88,89,90,-37,-40,-39,-38,-41,-46,-45,-44,-43,-42,]),'CLOSE_P':([7,8,9,25,26,32,33,34,38,39,40,42,43,44,45,46,47,48,51,52,54,55,56,60,66,67,68,69,70,71,72,73,74,75,76,78,79,87,88,89,90,91,92,93,94,95,96,],[-15,-16,-17,-14,-17,-28,-29,-30,50,-27,53,-10,-11,-12,-13,-7,-8,-9,-25,-26,-17,-6,-5,65,-23,-24,-31,-32,-18,-22,-19,-20,-21,-33,-36,-35,-34,-37,-40,-39,-38,-41,-46,-45,-44,-43,-42,]),'EQUALS':([9,54,],[21,21,]),'OPEN_P':([10,11,13,],[22,23,27,]),'INPUT':([21,],[36,]),'OPEN':([50,53,77,80,],[58,59,81,82,]),'ELSE':([68,69,],[77,80,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'run':([0,],[1,]),'expression':([0,12,14,15,16,17,21,22,35,37,39,47,49,57,58,59,66,67,68,69,81,82,87,88,89,90,],[2,24,28,29,30,31,35,37,46,49,51,55,57,60,62,63,72,73,75,79,83,86,91,93,95,96,]),'var_assign':([0,39,47,58,59,66,67,68,69,81,82,87,89,],[3,52,56,61,64,71,74,76,78,84,85,92,94,]),'condition':([0,27,],[4,40,]),'empty':([0,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> run","S'",1,None,None,None),
  ('run -> expression','run',1,'p_start','compiler.py',148),
  ('run -> var_assign','run',1,'p_start','compiler.py',149),
  ('run -> condition','run',1,'p_start','compiler.py',150),
  ('run -> empty','run',1,'p_start','compiler.py',151),
  ('var_assign -> NAME EQUALS expression SEMICOLON var_assign','var_assign',5,'p_var_assign2','compiler.py',161),
  ('var_assign -> NAME EQUALS expression SEMICOLON expression','var_assign',5,'p_var_assign2','compiler.py',162),
  ('var_assign -> NAME EQUALS expression expression','var_assign',4,'p_var_assign2','compiler.py',163),
  ('var_assign -> NAME EQUALS expression SEMICOLON','var_assign',4,'p_var_assign','compiler.py',170),
  ('var_assign -> NAME EQUALS INPUT SEMICOLON','var_assign',4,'p_var_assign','compiler.py',171),
  ('expression -> expression MULTIPLY expression SEMICOLON','expression',4,'p_expression','compiler.py',180),
  ('expression -> expression DIVIDE expression SEMICOLON','expression',4,'p_expression','compiler.py',181),
  ('expression -> expression PLUS expression SEMICOLON','expression',4,'p_expression','compiler.py',182),
  ('expression -> expression MINUS expression SEMICOLON','expression',4,'p_expression','compiler.py',183),
  ('expression -> INT','expression',1,'p_expression_int_float','compiler.py',192),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','compiler.py',193),
  ('expression -> STRING','expression',1,'p_expression_int_float','compiler.py',194),
  ('expression -> NAME','expression',1,'p_expression_var','compiler.py',200),
  ('expression -> DRAW OPEN_P expression expression expression expression CLOSE_P SEMICOLON','expression',8,'p_draw','compiler.py',206),
  ('expression -> FOR OPEN_P INT CLOSE_P OPEN var_assign CLOSE expression','expression',8,'p_for2','compiler.py',212),
  ('expression -> FOR OPEN_P INT CLOSE_P OPEN expression CLOSE expression','expression',8,'p_for2','compiler.py',213),
  ('expression -> FOR OPEN_P INT CLOSE_P OPEN expression CLOSE var_assign','expression',8,'p_for2','compiler.py',214),
  ('expression -> FOR OPEN_P INT CLOSE_P OPEN var_assign CLOSE var_assign','expression',8,'p_for2','compiler.py',215),
  ('expression -> FOR OPEN_P INT CLOSE_P OPEN var_assign CLOSE','expression',7,'p_for','compiler.py',221),
  ('expression -> FOR OPEN_P INT CLOSE_P OPEN expression CLOSE','expression',7,'p_for','compiler.py',222),
  ('expression -> PRINT expression SEMICOLON expression','expression',4,'p_print2','compiler.py',229),
  ('expression -> PRINT expression SEMICOLON var_assign','expression',4,'p_print2','compiler.py',230),
  ('expression -> PRINT expression SEMICOLON','expression',3,'p_print','compiler.py',236),
  ('condition -> INT LESS INT','condition',3,'p_condition','compiler.py',242),
  ('condition -> INT MORE INT','condition',3,'p_condition','compiler.py',243),
  ('condition -> INT EQUALEQUAL INT','condition',3,'p_condition','compiler.py',244),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN expression CLOSE','expression',7,'p_if_way','compiler.py',250),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE','expression',7,'p_if_way','compiler.py',251),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN expression CLOSE expression','expression',8,'p_if_way2','compiler.py',257),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE expression','expression',8,'p_if_way2','compiler.py',258),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE var_assign','expression',8,'p_if_way2','compiler.py',259),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN expression CLOSE var_assign','expression',8,'p_if_way2','compiler.py',260),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN expression CLOSE ELSE OPEN expression CLOSE','expression',11,'p_if_way_else','compiler.py',266),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE ELSE OPEN expression CLOSE','expression',11,'p_if_way_else','compiler.py',267),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE ELSE OPEN var_assign CLOSE','expression',11,'p_if_way_else','compiler.py',268),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN expression CLOSE ELSE OPEN var_assign CLOSE','expression',11,'p_if_way_else','compiler.py',269),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN expression CLOSE ELSE OPEN expression CLOSE expression','expression',12,'p_if_way_else_plus_expression','compiler.py',275),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE ELSE OPEN expression CLOSE expression','expression',12,'p_if_way_else_plus_expression','compiler.py',276),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE ELSE OPEN var_assign CLOSE expression','expression',12,'p_if_way_else_plus_expression','compiler.py',277),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN var_assign CLOSE ELSE OPEN var_assign CLOSE var_assign','expression',12,'p_if_way_else_plus_expression','compiler.py',278),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN expression CLOSE ELSE OPEN var_assign CLOSE expression','expression',12,'p_if_way_else_plus_expression','compiler.py',279),
  ('expression -> IF OPEN_P condition CLOSE_P OPEN expression CLOSE ELSE OPEN expression CLOSE var_assign','expression',12,'p_if_way_else_plus_expression','compiler.py',280),
  ('empty -> <empty>','empty',0,'p_empty','compiler.py',297),
]
